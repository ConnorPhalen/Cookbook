@model TechnicalProgrammingProject.Models.EditProfileViewModel

@{
    ViewBag.Title = "Edit Profile";
}

@Styles.Render("~/content/asset/css/profile.css")

<h1>Edit Profile</h1>

@using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div class="row">
            <div class="col-md-4 avatar">
                @Html.Image(Model.Image, new { @class = "img-responsive img-thumbnail" })
                @Html.HiddenFor(model => model.Image);
            </div>
            <div id="status">
                @ViewBag.StatusMessage
            </div>
            <div class="col-md-8 infoContainer">

                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.FileFor(model => model.ProfilePicture)
                        @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-envelope" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.Biography, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-comment" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.Biography, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control datefield" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-gift" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @min = "0", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group left-inner-addon">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="glyphicon glyphicon-briefcase" aria-hidden="true"></span>
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}